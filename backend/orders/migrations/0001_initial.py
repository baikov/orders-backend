# Generated by Django 4.2.4 on 2023-08-31 21:26

import backend.orders.models
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Название клиента"),
                ),
                (
                    "code",
                    django_extensions.db.fields.AutoSlugField(
                        blank=True,
                        editable=False,
                        max_length=30,
                        populate_from="name",
                        verbose_name="Уникальный код клиента",
                    ),
                ),
            ],
            options={
                "verbose_name": "Клиент",
                "verbose_name_plural": "Клиенты",
                "db_table": "customers",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="CustomerOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=backend.orders.models.get_order_file_path,
                        verbose_name="Файл",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="Изменено"),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="orders.customer",
                        verbose_name="Клиент",
                    ),
                ),
            ],
            options={
                "verbose_name": "Общий заказ",
                "verbose_name_plural": "Общие заказы",
                "db_table": "customer_orders",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "customer_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tp_orders",
                        to="orders.customerorder",
                        verbose_name="Общий заказ",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказ на торговую точку",
                "verbose_name_plural": "Заказы на торговые точки",
                "db_table": "orders",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Название товара"),
                ),
                (
                    "vendor_code",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Артикул"
                    ),
                ),
                (
                    "amount_in_pack",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Количество в упаковке"
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар",
                "verbose_name_plural": "Товары",
                "db_table": "products",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="TradePoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, verbose_name="Название торговой точки"
                    ),
                ),
                (
                    "sapcode",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="SAP код"
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trade_points",
                        to="orders.customer",
                        verbose_name="Клиент",
                    ),
                ),
            ],
            options={
                "verbose_name": "Торговая точка",
                "verbose_name_plural": "Торговые точки",
                "db_table": "trade_points",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="ProductInOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.PositiveIntegerField()),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="orders.order"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="orders.product"
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар в заказе",
                "verbose_name_plural": "Товары в заказах",
                "db_table": "products_in_orders",
                "ordering": ("id",),
            },
        ),
        migrations.AddField(
            model_name="order",
            name="products",
            field=models.ManyToManyField(
                related_name="orders",
                through="orders.ProductInOrder",
                to="orders.product",
                verbose_name="Товары в заказе",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="trade_point",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="orders",
                to="orders.tradepoint",
                verbose_name="Торговая точка",
            ),
        ),
        migrations.AddField(
            model_name="customerorder",
            name="products",
            field=models.ManyToManyField(
                related_name="customer_orders",
                to="orders.product",
                verbose_name="Товары в заказе",
            ),
        ),
    ]
